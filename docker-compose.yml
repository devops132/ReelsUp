services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: videodb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9001:9001"         # опционально — только консоль MinIO
    volumes:
      - minio_data:/data

  backend:
    build: ./backend
    environment:
      - PORT=4000
      - DATABASE_URL=postgresql://user:password@db:5432/videodb
      - JWT_SECRET=supersecretkey
      - UPLOAD_DIR=/tmp/uploads
      - CORS_ORIGIN=http://localhost:3000
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=videomarket
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    depends_on:
      - db
      - minio
    expose:
      - "4000"
    volumes:
      - uploads:/tmp/uploads
      - ./backend/sql:/app/sql

  frontend:
    build: ./frontend
    environment:
      - PORT=3000
      - NEXT_PUBLIC_API_BASE=/api   # клиентские запросы пойдут через gateway
    depends_on:
      - backend
    expose:
      - "3000"                      # порт внутри сети; наружу не публикуем

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    ports:
      - "3000:3000"                 # единая точка входа
    environment:
      BACKEND_TARGET: "http://backend:4000"
      MINIO_TARGET:  "http://minio:9000"
      PUBLIC_BASE_PATH: ""
      FRONTEND_STATIC_DIR: "/app/web"
      FRONTEND_UPSTREAM: "http://frontend:3000"  # сюда proxy для всех страниц
    depends_on:
      - backend
      - minio
      - frontend

volumes:
  db_data:
  uploads:
  minio_data:
