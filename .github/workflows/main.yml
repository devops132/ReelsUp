name: Deploy to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            # убедимся, что есть ключ для доступа к GitHub (deploy key) и known_hosts
            if ! grep -q github.com ~/.ssh/known_hosts; then ssh-keyscan -H github.com >> ~/.ssh/known_hosts; fi
            export GIT_SSH_COMMAND='ssh -i ~/.ssh/reelsup_deploy'
            git fetch --all
            git reset --hard origin/main
            export DOCKER_BUILDKIT=1
            export COMPOSE_DOCKER_CLI_BUILD=1
            docker-compose down --remove-orphans
            # If DOMAIN is set, issue/renew Let's Encrypt certs (first run and renew)
            if [ -n "${DOMAIN}" ]; then
              mkdir -p ${DEPLOY_PATH}/certbot/www ${DEPLOY_PATH}/certbot/etc
              docker-compose run --rm \
                -v ${DEPLOY_PATH}/certbot/www:/var/www/certbot \
                -v ${DEPLOY_PATH}/certbot/etc:/etc/letsencrypt \
                certbot certonly --webroot -w /var/www/certbot \
                --email ${LE_EMAIL} --agree-tos --no-eff-email --cert-name default -d ${DOMAIN}
            fi
            docker-compose up -d --build
            docker image prune -f

