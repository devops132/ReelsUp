import { Pool } from 'pg';
import fs from 'fs';
import path from 'path';
import { ensureAdmin } from '../controllers/auth.controller.js';

const connectionString = process.env.DATABASE_URL as string;
export const pool = new Pool({ connectionString });

export async function initDb() {
  const client = await pool.connect();
  try {
    // –ë–µ—Ä—ë–º init.sql –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞, –∞ –Ω–µ dist/
    const sqlPath = path.resolve(process.cwd(), 'src', 'sql', 'init.sql');
    const sql = fs.readFileSync(sqlPath, 'utf-8');

    await client.query(sql);
    console.log('‚úÖ DB initialized from init.sql');

    // –ü—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∞–ª—å–Ω–æ –µ—Å—Ç—å
    const tables = await client.query(`
      SELECT table_name
      FROM information_schema.tables
      WHERE table_schema='public'
      ORDER BY table_name;
    `);
    console.log('üìã Tables in DB:', tables.rows.map((r: { table_name: string }) => r.table_name).join(', '));

    // —Å–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∞ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    await ensureAdmin();
  } catch (err) {
    console.error('‚ùå DB init error:', err);
    throw err;
  } finally {
    client.release();
  }
}
